package top.vuhe.sw.common.util

import org.slf4j.Logger
import org.slf4j.LoggerFactory
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.data.redis.connection.stream.StreamRecords
import org.springframework.data.redis.core.*
import org.springframework.stereotype.Component

/**
 * 默认过期时长，单位：秒
 */
const val DEFAULT_EXPIRE = (60 * 60 * 24).toLong()

/**
 * 不设置过期时长
 */
const val NOT_EXPIRE: Long = -1

/**
 * Stream key
 */
const val STREAM_KEY = "realtime_stream"

@Component("RedisUtil")
class RedisUtil @Autowired constructor(
    val streamOperations: StreamOperations<String, String, String>
)

val redisUtil = SpringUtils.getBean("RedisUtil", RedisUtil::class.java)

val log: Logger = LoggerFactory.getLogger(RedisUtil::class.java)

fun sendToRedisStream(obj: Any) {
    val info = toJson(obj)
    val record = StreamRecords.newRecord().ofObject(info).withStreamKey(STREAM_KEY)
    val reRecord = redisUtil.streamOperations.add(record)
    log.info("$reRecord : ${reRecord?.timestamp} , ${reRecord?.shouldBeAutoGenerated()}")
}





